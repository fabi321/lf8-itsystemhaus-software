{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Dokumentation IT-Systemhaus-Software","text":"<p>Repository</p>"},{"location":"#ablauf","title":"Ablauf","text":""},{"location":"#phase-1","title":"Phase 1","text":"<p>Use-Case-Diagramm</p>"},{"location":"#phase-2","title":"Phase 2","text":"<p>Git einrichten, Github</p>"},{"location":"#phase-3","title":"Phase 3","text":"<p>Sequenzdiagramm</p>"},{"location":"#phase-4","title":"Phase 4","text":"<p>Diese Wiki, welche Sie gerade sehen</p>"},{"location":"#phase-5","title":"Phase 5","text":"<p>Siehe hier</p>"},{"location":"#phase-6","title":"Phase 6","text":"<p>Siehe hier</p>"},{"location":"#phase-7","title":"Phase 7","text":"<p>Siehe hier</p>"},{"location":"#phase-8","title":"Phase 8","text":"<p>Siehe hier</p>"},{"location":"#phase-9","title":"Phase 9","text":"<p>Siehe hier</p>"},{"location":"#phase-12","title":"Phase 12","text":"<p>Siehe hier</p>"},{"location":"deployment_mit_mkdocs/","title":"Docs deployment auf Github-Pages mit mkdocs","text":""},{"location":"deployment_mit_mkdocs/#mkdocs-installieren","title":"MkDocs installieren","text":"<pre><code>pip install mkdocs mkdocs-material\n</code></pre> <p>Verwendung des Proxy</p> <p>In der Schule muss Python die Verwendung des Proxy mittgeteilt werden. Dies geschieht durch die Option --proxy. Der resultierende Befehl sieht also wie folgt aus: <pre><code>pip --proxy http://kjs-03.lan.dd-schulen.de:3128  install mkdocs mkdocs-material\n</code></pre></p>"},{"location":"deployment_mit_mkdocs/#mit-mkdocs-anfangen","title":"Mit mkdocs anfangen","text":"<p>Zuerst muss man eine mkdocs.yml Datei anlegen, die die Struktur und das Aussehen der Dokumentation beschreibt. Ein Beispiel k\u00f6nnte wie folgt aussehen: <pre><code>site_name: Projektname\nnav:\n  - index.md\ntheme: material\nmarkdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n</code></pre></p> <p>Dazu ben\u00f6tigt man eine Verzeichnisstruktur wie folgt: <pre><code>Projektverzeichnis\n |- mkdocs.yml\n \\- docs\n  \\- index.md\n</code></pre></p>"},{"location":"deployment_mit_mkdocs/#dokumentationen-lokal-ansehen","title":"Dokumentationen Lokal ansehen","text":"<p>Dazu f\u00fchrt man mkdocs mit dem Unterbefehl <code>serve</code> wie folgt aus <pre><code>mkdocs serve\n</code></pre></p> <p>Befehl konnte nicht gefunden werden</p> <p>Falls mkdocs installiert ist, es aber von der Git Bash nicht gefunden werden kann, ist es wahrscheinlich nicht im PATH enthalten. F\u00fcr diesen Fall muss der Befehl <code>mkdocs</code> durch folgenden Befehl ersetzt werden: <pre><code>~/AppData/Roaming/Python/Python310/Scripts/mkdocs.exe\n</code></pre></p> <p>Anschlie\u00dfend kann man sich die Dokumentation unter localhost:8000 ansehen. Der Webserver kann durch dr\u00fccken von Strg+C beendet werden.</p>"},{"location":"deployment_mit_mkdocs/#auf-github-pages-deployen","title":"Auf Github-Pages deployen","text":"<p>Github-Pages ist f\u00fcr jedes Repository auf Github verf\u00fcgbar. Um eine MkDocs-Seite \u00fcber Github-Pages verf\u00fcgbar zu machen, muss man zuerst den Subbefehl gh-deploy von MkDocs ausf\u00fchren: <pre><code>mkdocs gh-deploy\n</code></pre> <pre><code>~/AppData/Roaming/Python/Python310/Scripts/mkdocs.exe gh-deploy\n</code></pre></p> <p>Anschlie\u00dfend sollte Github automatisch ein Github-Pages Environment hinzuf\u00fcgen, welches die Seite unter <code>https://&lt;username&gt;.github.io/&lt;repositoryName&gt;</code> verf\u00fcgbar machen.</p>"},{"location":"deployment_mit_mkdocs/#optional-einrichten-einer-ci-pipeline","title":"Optional: Einrichten einer CI-Pipeline","text":"<p>Durch das einrichten einer CI-Pipeline kann man das aufrufen von <code>mkdocs gh-deploy</code> automatisieren. Dazu muss man folgenden Inhalt in die Datei <code>.github/workflows/ci.yml</code> im Projektverzeichnis schreiben: <pre><code>name: ci \non:\n  push:\n    branches:\n      - main\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n      - run: pip install mkdocs-material \n      - run: mkdocs gh-deploy --force\n</code></pre></p>"},{"location":"phase1/","title":"Phase 1","text":""},{"location":"phase10/","title":"Phase 10 Vorgehensmodell zur Softwareentwicklung ausw\u00e4hlen","text":""},{"location":"phase10/#software-lebenszyklus","title":"Software-Lebenszyklus","text":""},{"location":"phase10/#aufgabeproblem","title":"Aufgabe/Problem","text":"<p>Vorbereitung eines Angebots f\u00fcr Softwareentwicklung</p>"},{"location":"phase10/#anforderungsanalyse","title":"Anforderungsanalyse","text":"<ul> <li>Phase 1</li> <li>Phase 2</li> </ul>"},{"location":"phase10/#analyse-und-entwurf","title":"Analyse und Entwurf","text":"<ul> <li>Phase 3</li> <li>Phase 4</li> <li>Phase 5</li> <li>Phase 7</li> <li>Phase 8</li> <li>Phase 10</li> </ul>"},{"location":"phase10/#implementierung","title":"Implementierung","text":"<ul> <li>Phase 6</li> <li>Phase 9</li> <li>Phase 11</li> </ul>"},{"location":"phase10/#test","title":"Test","text":"<ul> <li>Phase 12</li> </ul>"},{"location":"phase10/#auslieferung","title":"Auslieferung","text":"<ul> <li>Phase 13</li> </ul>"},{"location":"phase10/#vergleich-der-vorgehensmodelle","title":"Vergleich der Vorgehensmodelle","text":"Modell formell/informell linear/iterativ Kundenbeteiligung (hoch/gering) Vorteile Nachteile Anwendung V-Modell formell linear gering klare Struktur sehr teuer und zeitaufwendig Projekte, bei denen St\u00f6rungen und Ausfallzeiten inakzeptabel sind Wasserfallmodell formell linear gering klare Struktur starker Dokumentationsaufwand Einfache kleine oder mittelgro\u00dfe Softwareprojekte mit klar definierten und unver\u00e4nderlichen Anforderungen Spiralmodell formell linear gering fr\u00fchzeitige Kundeneinbindung schlechte Parallelisierung von Prozessen Projekte mit unklaren Gesch\u00e4ftsanforderungen oder zu anspruchsvollen / innovativen Anforderungen Kanban informell iterativ hoch sehr gute Skalierbarkeit nicht f\u00fcr alle Betriebe geeignet Projekte rund um Softwaresupport und Weiterentwicklung Scrum informell iterativ hoch hohe Effektivit\u00e4t durch Selbstorganisation kein Gesamt\u00fcberblick \u00fcber die komplette Projektstrecke Projekte rund um Softwaresupport und Weiterentwicklung"},{"location":"phase10/#modell","title":"Modell","text":"<p>Wir haben uns f\u00fcr das Kanban entschieden, da wir ein IT-Projekt umsetzen; des Weiteren sprechen daf\u00fcr der \u00fcberschaubare Dokumentationsaufwand und die Flexibilit\u00e4t bei der Projektplanung, da wir uns entschieden haben agil zu arbeiten. Das Kanban Board visualisiert unseren aktuellen Projektfortschritt und schafft Transparenz \u00fcber offene Aufgaben. Au\u00dferdem k\u00f6nnen wir flexibel die Anforderungen \u00e4ndern.</p>"},{"location":"phase10/#rollen-team","title":"Rollen Team","text":"<ul> <li> <p>Teamleader: Christian Winterlich</p> </li> <li> <p>Programmierer: Fabian Wunsch</p> </li> <li> <p>Ersteller f\u00fcr Testpl\u00e4ne: Max Ullmann</p> </li> <li> <p>Dokumentersteller &amp; Referent: Natalie Jurtz</p> </li> <li> <p>Redakteur MVC &amp; GUI-Prototyp Ersteller: Daniel K\u00fchnel</p> </li> </ul>"},{"location":"phase10/#zeitplan","title":"Zeitplan","text":""},{"location":"phase11/","title":"Phase 11","text":""},{"location":"phase11/#mvc-model-view-controller-pattern","title":"MVC | Model View Controller Pattern","text":"<p>Das Model-View-Controller (kurz MVC) ist ein Architektur- oder Entwurfsmuster, das ein flexibles Programmdesign erm\u00f6glicht, sp\u00e4tere \u00c4nderungen oder Erweiterungen erleichtert und die Wiederverwendung einzelner Komponenten erm\u00f6glicht.</p> <p>Das MVC-Pattern wird in Anwendungen mit grafischen Benutzeroberfl\u00e4chen verwendet. Es wird bei Programmen mit grafischer Oberfl\u00e4che in drei grundlegende Teile aufgeteilt. Das Model (MVC) verwaltet die Datenstruktur der Anwendung, Views sorgen f\u00fcr die grafische Oberfl\u00e4che zur Nutzerinteraktion (MVC) und die Controller stellen die Programmlogik (MVC) bereit.</p> <p></p> <p></p>"},{"location":"phase5/","title":"Phase 5","text":""},{"location":"phase5/#notwendige-daten","title":"Notwendige Daten","text":"<ul> <li>Raumplan</li> <li>\u00dcbersicht der zu installierenden Hardware</li> <li>Platzierung der zu installierenden Hardware</li> </ul>"},{"location":"phase5/#analysieren-sie-die-datenquellen-hinsichtlich-der-bereitstellerorte-und-moglicher-datenformate-in-denen-diese-bereitgestellt-werden-konnen","title":"Analysieren Sie die Datenquellen hinsichtlich der Bereitsteller/Orte und m\u00f6glicher Datenformate in denen diese bereitgestellt werden k\u00f6nnen.","text":"<ul> <li>vom Architekten: IFC</li> <li>vom Geb\u00e4udetechniker: Revit</li> <li>vom Au\u00dfendienst: X3D</li> </ul>"},{"location":"phase5/#untersuchen-sie-die-datenformate","title":"Untersuchen Sie die Datenformate:","text":"Datenformat Welche Daten werden dargestellt Wie werden Daten in den Datenquellen dargestellt Wie k\u00f6nnen diese importiert und sinnvoll weiterverarbeitet werden Welche Metainformationen sind zur Datenquelle vorhanden .ifc - logische Bauwerkstrukturen- zugeh\u00f6rige Eigenschaften- optische Geometrie - IfcObjectDefinition beinhaltet die Entit\u00e4ten- IfcRelationship beinhaltet die beziehungen zwischen Entit\u00e4ten- IfcPropertyDefinition beinhaltet die Eigenschaften,die mit den Entit\u00e4ten verbunden sind IFC-Dateien werden z.B. von Autodesk, Adobe Acrobat, FME Desktop, CYPECAD, SketchUp und ARCHICAD unterst\u00fctzt .rvt - 2D- und 3D-Modellierung f\u00fcr bauteilorientierte Geb\u00e4udemodelle .x3d - Koordinaten vom Bauteil- Material- Networking und Animationen"},{"location":"phase5/#entscheiden-sie-wer-die-daten-innerhalb-der-itsystemhausdd-gmbh-nutzen-und-verarbeiten-darf","title":"Entscheiden Sie, wer die Daten innerhalb der ITSystemHausDD GmbH nutzen und verarbeiten darf.","text":"<ul> <li>der Au\u00dfendienst, um Raumpl\u00e4ne anzufertigen</li> <li>der Innendienst, um die eigentliche Planung vorzunehmen</li> <li>der Verkauf, um das Angebot erstellen zu k\u00f6nnen</li> </ul>"},{"location":"phase5/#entscheiden-sie-sich-fur-ein-datenformat-fur-das-angebot","title":"Entscheiden Sie sich f\u00fcr ein Datenformat f\u00fcr das Angebot.","text":"<p>PDF</p>"},{"location":"phase6/","title":"Phase 6","text":""},{"location":"phase6/#identifizierte-nutzer","title":"Identifizierte Nutzer","text":"<p>Schreibrechte implizieren Leserechte</p> Nutzer Leserechte Schreibrechte Einkauf \u00dcbersicht der zu installierenden Hardware Verkauf Raumplan, \u00dcbersicht der zu installierenden Hardware, Platzierung der zu installierenden Hardware Innendienst Raumplan, \u00dcbersicht der zu installierenden Hardware, Platzierung der zu installierenden Hardware Au\u00dfendienst bereitgestellter Grundriss Raumplan Administrator Raumplan, \u00dcbersicht der zu installierenden Hardware, Platzierung der zu installierenden Hardware, bereitgestellter Grundriss"},{"location":"phase6/#praktische-umsetzung","title":"Praktische Umsetzung","text":"<p>Die Implementierung des Rollen- und Berechtigungskonzeptes wird mit SQLite, die grafische Oberfl\u00e4che wird \u00fcber SQLite Browser realisiert. Die Schnittstelle findet \u00fcber C Aufrufe statt.</p>"},{"location":"phase7/","title":"Phase 7","text":""},{"location":"phase7/#it-sicherheitskonzept","title":"IT-Sicherheitskonzept","text":"Datenquelle TOM Umsetzung Raumplan technische Ma\u00dfnahme Benutzerkonto, Passworterzwingung, Logging \u00dcbersicht der zu installierenden Hardware technische Ma\u00dfnahme Benutzerkonto, Passworterzwingung, Logging Platzierung der zu installierenden Hardware technische Ma\u00dfnahme Benutzerkonto, Passworterzwingung, Logging bereitgestellter Grundriss technische Ma\u00dfnahme Benutzerkonto, Passworterzwingung, Logging *bei Admins organisatorische Ma\u00dfnahme Vier-Augen-Prinzip"},{"location":"phase8/","title":"Phase 8","text":""},{"location":"phase9/","title":"Phase 9","text":""}]}